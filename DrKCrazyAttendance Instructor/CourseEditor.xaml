<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" x:Class="DrKCrazyAttendance_Instructor.CourseEditor"
        Title="Course Editor" Height="290" Width="520" MinHeight="260" MinWidth="520" Icon="icon.ico" ResizeMode="CanMinimize" Closed="Window_Closed" WindowStartupLocation="CenterScreen"
        >
    <Grid Margin="0,0,0,1" HorizontalAlignment="Right" Width="507" Height="228" VerticalAlignment="Bottom">
        <Grid.RowDefinitions>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid HorizontalAlignment="Left" Height="56" VerticalAlignment="Top" Width="507" Margin="0,-23,0,0">
            <Label Content="{Binding Path=(Validation.Errors).CurrentItem.ErrorContent, ElementName=classroomChoice}" Margin="32,6,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Foreground="Red"/>
            <Label Content="Classroom:" HorizontalAlignment="Left" Margin="32,25,0,0" VerticalAlignment="Top"/>
            <Label Content="{Binding Path=(Validation.Errors).CurrentItem.ErrorContent, ElementName=txtCourse}" Margin="205,7,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" RenderTransformOrigin="20.533,1.242" Foreground="Red"/>
            <Label Content="Course:" HorizontalAlignment="Left" Margin="205,25,0,0" VerticalAlignment="Top" Height="26" Width="49"/>
            <Label Content="{Binding Path=(Validation.Errors).CurrentItem.ErrorContent, ElementName=txtSection}" Margin="363,7,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Foreground="Red"/>
            <Label Content="Section:" HorizontalAlignment="Left" Margin="363,25,0,0" VerticalAlignment="Top" Height="26" Width="54"/>
            <ComboBox x:Name="classroomChoice" HorizontalAlignment="Left" Margin="100,29,0,0" VerticalAlignment="Top" Width="100" IsEditable="True" 
            	Text="{Binding Course.Classroom, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Style="{StaticResource textBoxInError}" Validation.Error="control_Error" 
                      TextBoxBase.TextChanged="classroomChoice_TextChanged"/>
            <TextBox x:Name="txtCourse" HorizontalAlignment="Left" Height="23" Margin="259,28,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="100" 
            	Text="{Binding Course.CourseName, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Style="{StaticResource textBoxInError}" Validation.Error="control_Error" TextChanged="txtCourse_TextChanged"/>
            <TextBox x:Name="txtSection" HorizontalAlignment="Left" Height="23" Margin="417,28,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="80" 
            	Text="{Binding Course.Section, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Style="{StaticResource textBoxInError}" Validation.Error="control_Error" TextChanged="txtSection_TextChanged"/>
        </Grid>
        <Grid HorizontalAlignment="Left" Height="47" VerticalAlignment="Top" Width="507" Margin="0,37,0,0">
            <Label Content="{Binding Path=(Validation.Errors).CurrentItem.ErrorContent, ElementName=startDatePicker}" Margin="28,-6,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Foreground="Red"/>
            <Label Content="Start Date:" HorizontalAlignment="Left" Margin="28,16,0,0" VerticalAlignment="Top" Height="26" Width="68"/>
            <Label Content="{Binding Path=(Validation.Errors).CurrentItem.ErrorContent, ElementName=endDatePicker}" Margin="202,-6,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Foreground="Red"/>
            <Label Content="End Date:" HorizontalAlignment="Left" Margin="202,16,0,0" VerticalAlignment="Top" Height="26" Width="61"/>
            <DatePicker x:Name="startDatePicker" HorizontalAlignment="Left" Margin="101,18,0,0" VerticalAlignment="Top" Width="100" FirstDayOfWeek="Monday" 
        		SelectedDate="{Binding Course.StartDate, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Style="{StaticResource textBoxInError}" Validation.Error="control_Error">
                <DatePicker.BlackoutDates>
                    <CalendarDateRange End="2014-12-31" Start="1900-01-01"/>
                </DatePicker.BlackoutDates>
            </DatePicker>
            <DatePicker x:Name="endDatePicker" HorizontalAlignment="Left" Margin="263,17,0,0" VerticalAlignment="Top" Width="100" FirstDayOfWeek="Monday" 
        		SelectedDate="{Binding Course.EndDate, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Style="{StaticResource textBoxInError}" Validation.Error="control_Error">
                <DatePicker.BlackoutDates>
                    <CalendarDateRange End="2014-12-31" Start="1900-01-01"/>
                </DatePicker.BlackoutDates>
            </DatePicker>
        </Grid>
        <Grid HorizontalAlignment="Left" Height="43" VerticalAlignment="Top" Width="507" Margin="0,84,0,0">
            <Label Content="{Binding Path=(Validation.Errors).CurrentItem.ErrorContent, ElementName=startTimePicker}" Margin="32,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Foreground="Red"/>
            <Label Content="Start Time:" HorizontalAlignment="Left" VerticalAlignment="Top" Height="26" Width="68" Margin="27,16,0,0"/>
            <Label Content="{Binding Path=(Validation.Errors).CurrentItem.ErrorContent, ElementName=endTimePicker}" Margin="213,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Foreground="Red" RenderTransformOrigin="0.3,1.433"/>
            <Label Content="End Time:" HorizontalAlignment="Left" Margin="201,16,0,0" VerticalAlignment="Top" Height="26" Width="61"/>
            <xctk:TimePicker x:Name="startTimePicker" HorizontalAlignment="Left" Margin="100,22,0,0" VerticalAlignment="Top" Width="100" Background="White" 
        		Value="{Binding Course.StartTime, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Validation.Error="control_Error"/>
            <xctk:TimePicker x:Name="endTimePicker" HorizontalAlignment="Left" Margin="262,22,0,0" VerticalAlignment="Top" Width="100" Background="White" 
        		Value="{Binding Course.EndTime, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Validation.Error="control_Error"/>
        </Grid>
        <Grid HorizontalAlignment="Left" Height="65" VerticalAlignment="Top" Width="166" Margin="10,153,0,0">
            <CheckBox x:Name="chkEnableTardy" Content="Enable Tardy Logging" HorizontalAlignment="Left" VerticalAlignment="Top" Click="chkEnableTardy_Click" IsChecked="{Binding Course.LogTardy}"/>
            <Label Content="Grace Period:" HorizontalAlignment="Left" Margin="2,42,0,-2" VerticalAlignment="Top" RenderTransformOrigin="0.425,0.538" Height="25"/>
            <Label Content="{Binding Path=(Validation.Errors).CurrentItem.ErrorContent, ElementName=gracePeriodTS}" Margin="10,21,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" RenderTransformOrigin="0.7,-1.2" Foreground="Red"/>
            <xctk:TimeSpanUpDown x:Name="gracePeriodTS" HorizontalAlignment="Left" Margin="87,45,0,0" VerticalAlignment="Top" Width="79" IsEnabled="False"
        		ToolTip="How long for the student has to &quot;sign in&quot; before being counted for being tardy " 
        		Value="{Binding Course.GracePeriod, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" Validation.Error="control_Error" Height="19">
                <xctk:TimeSpanUpDown.Style>
                    <Style TargetType="{x:Type xctk:TimeSpanUpDown}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Course.LogTardy}" Value="False">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </xctk:TimeSpanUpDown.Style>
            </xctk:TimeSpanUpDown>
        </Grid>
        <GroupBox Header="Class Days" HorizontalAlignment="Left" Margin="388,58,0,0" VerticalAlignment="Top" Height="134" Width="109">
            <StackPanel HorizontalAlignment="Left" Height="143" VerticalAlignment="Top" Width="80" Margin="10,10,0,-12">
                <CheckBox x:Name="chkMonday" Content="Monday" HorizontalAlignment="Right" VerticalAlignment="Top" Height="16" Width="61" Margin="0,0,19,0"/>
                <CheckBox x:Name="chkTuesday" Content="Tuesday" HorizontalAlignment="Left" VerticalAlignment="Top" Height="16" Width="61"/>
                <CheckBox x:Name="chkWednesday" Content="Wednesday" HorizontalAlignment="Left" VerticalAlignment="Top" Height="16" Width="79"/>
                <CheckBox x:Name="chkThursday" Content="Thursday" HorizontalAlignment="Left" VerticalAlignment="Top" Height="16" Width="69"/>
                <CheckBox x:Name="chkFriday" Content="Friday" HorizontalAlignment="Left" VerticalAlignment="Top" Height="16" Width="61"/>
                <CheckBox x:Name="chkSaturday" Content="Saturday" HorizontalAlignment="Left" VerticalAlignment="Top" Height="16" Width="67"/>
            </StackPanel>
        </GroupBox>
        <Button x:Name="btnResetAddCourse" Content="Reset" HorizontalAlignment="Left" Margin="342,197,0,0" VerticalAlignment="Top" Width="75" IsCancel="True" Click="btnResetCourse_Click"/>
        <Button x:Name="btnSave" HorizontalAlignment="Left" Margin="422,197,0,0" VerticalAlignment="Top" Width="75" IsDefault="True" Click="btnSave_Click" Content="Save"/>
    </Grid>
</Window>
